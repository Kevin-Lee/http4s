# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']
    tags: [v*]

env:
  PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  SONATYPE_CREDENTIAL_HOST: ${{ secrets.SONATYPE_CREDENTIAL_HOST }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  PGP_SECRET: ${{ secrets.PGP_SECRET }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        scala: ["3.3.4", "2.12.18", "2.13.11"]
        java:
          - { java-version: "17", java-distribution: "temurin" }
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (${{ matrix.java.java-distribution }}@${{ matrix.java.java-version }})
        uses: actions/setup-java@v4.4.0
        with:
          distribution: ${{ matrix.java.java-distribution }}
          java-version: ${{ matrix.java.java-version }}
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1

#      - name: Check that workflows are up to date
#        run: sbt '++${{ matrix.scala }}' 'project /' githubWorkflowCheck

      - name: Test
        run: sbt '++${{ matrix.scala }}' test

      - name: Check binary compatibility
        if: matrix.java == 'temurin@17'
        run: sbt '++${{ matrix.scala }}' mimaReportBinaryIssues

      - name: Generate API documentation
        if: matrix.java == 'temurin@17'
        run: sbt '++${{ matrix.scala }}' doc

      - name: Check Scalafix rules
        if: matrix.scala != '3.3.4'
        run: sbt '++${{ matrix.scala }}' 'scalafixAll --check'

      - name: Make target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/series/0.22')
        run: mkdir -p examples/ember/target blaze-client/target server/target examples/target scalafix-internal/input/target blaze-server/target scalafix-internal/tests/target scalatags/target target examples/docker/target twirl/target unidocs/target site/target laws/target tests/target tomcat-server/target prometheus-metrics/target scalafix-internal/output/target servlet/target examples/tomcat/target examples/jetty/target testing/target ember-server/target okhttp-client/target examples/blaze/target scalafix-internal/rules/target client/target blaze-core/target circe/target examples/war/target jetty-client/target ember-client/target boopickle/target play-json/target async-http-client/target core/target scala-xml/target dsl/target dropwizard-metrics/target jetty-server/target ember-core/target jawn/target bench/target project/target

      - name: Compress target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/series/0.22')
        run: tar cf targets.tar examples/ember/target blaze-client/target server/target examples/target scalafix-internal/input/target blaze-server/target scalafix-internal/tests/target scalatags/target target examples/docker/target twirl/target unidocs/target site/target laws/target tests/target tomcat-server/target prometheus-metrics/target scalafix-internal/output/target servlet/target examples/tomcat/target examples/jetty/target testing/target ember-server/target okhttp-client/target examples/blaze/target scalafix-internal/rules/target client/target blaze-core/target circe/target examples/war/target jetty-client/target ember-client/target boopickle/target play-json/target async-http-client/target core/target scala-xml/target dsl/target dropwizard-metrics/target jetty-server/target ember-core/target jawn/target bench/target project/target

      - name: Upload target directories
        if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/series/0.22')
        uses: actions/upload-artifact@v4
        with:
          name: target-${{ matrix.os }}-${{ matrix.java.java-distribution }}@${{ matrix.java.java-version }}-${{ matrix.scala }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/series/0.22')
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.11]
        java:
          - { java-version: "17", java-distribution: "temurin" }
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (${{ matrix.java.java-distribution }}@${{ matrix.java.java-version }})
        uses: actions/setup-java@v4.4.0
        with:
          distribution: ${{ matrix.java.java-distribution }}
          java-version: ${{ matrix.java.java-version }}
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1

      - name: Download target directories (3.3.4)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java.java-distribution }}@${{ matrix.java.java-version }}-3.3.4

      - name: Inflate target directories (3.3.4)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.12.18)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java.java-distribution }}@${{ matrix.java.java-version }}-2.12.18

      - name: Inflate target directories (2.12.18)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13.11)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java.java-distribution }}@${{ matrix.java.java-version }}-2.13.11

      - name: Inflate target directories (2.13.11)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13.11)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java.java-distribution }}@${{ matrix.java.java-version }}-2.13.11

      - name: Inflate target directories (2.13.11)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.13.11)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.java.java-distribution }}@${{ matrix.java.java-version }}-2.13.11

      - name: Inflate target directories (2.13.11)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Import signing key
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE == ''
        run: echo $PGP_SECRET | base64 -di | gpg --import

      - name: Import signing key and strip passphrase
        if: env.PGP_SECRET != '' && env.PGP_PASSPHRASE != ''
        run: |
          echo "$PGP_SECRET" | base64 -di > /tmp/signing-key.gpg
          echo "$PGP_PASSPHRASE" | gpg --pinentry-mode loopback --passphrase-fd 0 --import /tmp/signing-key.gpg
          (echo "$PGP_PASSPHRASE"; echo; echo) | gpg --command-fd 0 --pinentry-mode loopback --change-passphrase $(gpg --list-secret-keys --with-colons 2> /dev/null | grep '^sec:' | cut --delimiter ':' --fields 5 | tail -n 1)

      - name: Publish
        run: sbt '++${{ matrix.scala }}' tlRelease

  scalafix:
    name: Scalafix
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: ["3.3.4", "2.12.18", "2.13.11"]
        java:
          - { java-version: "17", java-distribution: "temurin" }
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (${{ matrix.java.java-distribution }}@${{ matrix.java.java-version }})
        uses: actions/setup-java@v4.4.0
        with:
          distribution: ${{ matrix.java.java-distribution }}
          java-version: ${{ matrix.java.java-version }}
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1

      - name: Scalafix tests
        if: matrix.scala == '2.13.11'
        run: |
          cd scalafix
          sbt ci

  site:
    name: Generate Site
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.11]
        java:
          - { java-version: "17", java-distribution: "temurin" }
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java (${{ matrix.java.java-distribution }}@${{ matrix.java.java-version }})
        uses: actions/setup-java@v4.4.0
        with:
          distribution: ${{ matrix.java.java-distribution }}
          java-version: ${{ matrix.java.java-version }}
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1

      - name: Generate site
        run: sbt '++${{ matrix.scala }}' site/tlSite

      - name: Publish site
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/series/0.22'
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: site/target/docs/site
          keep_files: true
